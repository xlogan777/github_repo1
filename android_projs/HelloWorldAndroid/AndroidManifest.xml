<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.helloworldandroid"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="8"
        android:targetSdkVersion="19" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >

        <!-- main class for this activity class. [name] label tells which class to use. -->
        <activity
            android:name="com.example.helloworldandroid.MainActivity"
            android:label="@string/app_name" >
            <intent-filter>

                <!-- main entry point for app which is tied to this activity -->
                <action android:name="android.intent.action.MAIN" />

                <!-- this is saying that the main activity is the first entry point. -->
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- this added a service for our activities to start and bind to -->
        <service
            android:name="com.example.helloworldandroid.HelloService"
            android:enabled="true" />

        <!-- this is the broadcast type to be used in android os. -->
        <!--
             it is registering the Receiver class with specific events, one being the system event boot_complete
             and the other is a custom event being generated by the main activity...as a sendBroadcast call...
        -->
        <!-- FOR THE RECEIVER, ALWAYS ENABLE THE ANDROID ATTRIBUTE IN THE XML..OTHERWISE THE RECEIVER WONT SEE THE EVENT. -->
        <receiver
            android:name="com.example.helloworldandroid.HelloReceiver"
            android:enabled="true" android:exported="false">
            
            <intent-filter>

                <!-- listen for android is boot complete event. OS intent -->
                <!-- <action android:name="android.intent.action.BOOT_COMPLETED" /> -->

                <!-- this is my own custom intent -->
                <action android:name="com.example.helloworldandroid.CUSTOM_INTENT" />
            </intent-filter>
        </receiver>

        <!-- this is the content provider area to be used -->
        <!-- the authorities is the uri that users can use to access this content provider. -->
        <provider
            android:name="com.example.helloworldandroid.HelloContentProvider"
            android:authorities="com.example.helloworldandroid.College"
            android:enabled="true"
            android:exported="false" />

        <!-- added new activity for showing fragments samples. -->
        <activity
            android:name="com.example.helloworldandroid.SampleFragmentActivity"
            android:label="@string/title_activity_sample_fragment" >
        </activity>
    </application>

    <!-- android:authorities="com.example.helloworldandroid.College" -->

</manifest>
