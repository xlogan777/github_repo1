package com.util.nbc_data_layer.nbcGreenDaoSrcGen;


import com.util.nbc_data_layer.nbcGreenDaoSrcGen.DaoSession;

import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS


// KEEP INCLUDES - put your custom includes here
import com.util.nbc_data_layer.EntityItemIface;
import com.util.nbc_data_layer.EntityVisitorIface;
import com.util.nbc_data_layer.NBCDataBaseHelper.T_UrlTypeToId;
import com.util.nbc_data_layer.dataTypes.RelCntItemTypeIface;
//public class RelatedItemsTable implements EntityItemIface, RelCntItemTypeIface{
// KEEP INCLUDES END
/**
 * Entity mapped to table RELATED_ITEMS_TABLE.
 */
public class RelatedItemsTable implements EntityItemIface, RelCntItemTypeIface{

    private Long id;
    private long ParentCmsID;
    private long RelCmsID;
    /** Not-null value. */
    private String ContentType;
    /** Not-null value. */
    private String Title;
    private boolean Sponsored;
    /** Not-null value. */
    private String Source;
    private long RelItemMobileThumbnailUrlType;
    private long RelItemStoryThumbnailUrlType;
    /** Not-null value. */
    private String SharingUrl;
    private long TypeID;
    private long relItemMobileThumbnailUrlImgTypeRowID;
    private long relItemStoryThumbnailUrlImgTypeRowID;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient RelatedItemsTableDao myDao;

    private UrlImgFileTable relItemMobileThumbnailUrlImgType;
    private Long relItemMobileThumbnailUrlImgType__resolvedKey;

    private UrlImgFileTable relItemStoryThumbnailUrlImgType;
    private Long relItemStoryThumbnailUrlImgType__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public RelatedItemsTable() {
    }

    public RelatedItemsTable(Long id) {
        this.id = id;
    }

    public RelatedItemsTable(Long id, long ParentCmsID, long RelCmsID, String ContentType, String Title, boolean Sponsored, String Source, long RelItemMobileThumbnailUrlType, long RelItemStoryThumbnailUrlType, String SharingUrl, long TypeID, long relItemMobileThumbnailUrlImgTypeRowID, long relItemStoryThumbnailUrlImgTypeRowID) {
        this.id = id;
        this.ParentCmsID = ParentCmsID;
        this.RelCmsID = RelCmsID;
        this.ContentType = ContentType;
        this.Title = Title;
        this.Sponsored = Sponsored;
        this.Source = Source;
        this.RelItemMobileThumbnailUrlType = RelItemMobileThumbnailUrlType;
        this.RelItemStoryThumbnailUrlType = RelItemStoryThumbnailUrlType;
        this.SharingUrl = SharingUrl;
        this.TypeID = TypeID;
        this.relItemMobileThumbnailUrlImgTypeRowID = relItemMobileThumbnailUrlImgTypeRowID;
        this.relItemStoryThumbnailUrlImgTypeRowID = relItemStoryThumbnailUrlImgTypeRowID;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getRelatedItemsTableDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public long getParentCmsID() {
        return ParentCmsID;
    }

    public void setParentCmsID(long ParentCmsID) {
        this.ParentCmsID = ParentCmsID;
    }

    public long getRelCmsID() {
        return RelCmsID;
    }

    public void setRelCmsID(long RelCmsID) {
        this.RelCmsID = RelCmsID;
    }

    /** Not-null value. */
    public String getContentType() {
        return ContentType;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setContentType(String ContentType) {
        this.ContentType = ContentType;
    }

    /** Not-null value. */
    public String getTitle() {
        return Title;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setTitle(String Title) {
        this.Title = Title;
    }

    public boolean getSponsored() {
        return Sponsored;
    }

    public void setSponsored(boolean Sponsored) {
        this.Sponsored = Sponsored;
    }

    /** Not-null value. */
    public String getSource() {
        return Source;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSource(String Source) {
        this.Source = Source;
    }

    public long getRelItemMobileThumbnailUrlType() {
        return RelItemMobileThumbnailUrlType;
    }

    public void setRelItemMobileThumbnailUrlType(long RelItemMobileThumbnailUrlType) {
        this.RelItemMobileThumbnailUrlType = RelItemMobileThumbnailUrlType;
    }

    public long getRelItemStoryThumbnailUrlType() {
        return RelItemStoryThumbnailUrlType;
    }

    public void setRelItemStoryThumbnailUrlType(long RelItemStoryThumbnailUrlType) {
        this.RelItemStoryThumbnailUrlType = RelItemStoryThumbnailUrlType;
    }

    /** Not-null value. */
    public String getSharingUrl() {
        return SharingUrl;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setSharingUrl(String SharingUrl) {
        this.SharingUrl = SharingUrl;
    }

    public long getTypeID() {
        return TypeID;
    }

    public void setTypeID(long TypeID) {
        this.TypeID = TypeID;
    }

    public long getRelItemMobileThumbnailUrlImgTypeRowID() {
        return relItemMobileThumbnailUrlImgTypeRowID;
    }

    public void setRelItemMobileThumbnailUrlImgTypeRowID(long relItemMobileThumbnailUrlImgTypeRowID) {
        this.relItemMobileThumbnailUrlImgTypeRowID = relItemMobileThumbnailUrlImgTypeRowID;
    }

    public long getRelItemStoryThumbnailUrlImgTypeRowID() {
        return relItemStoryThumbnailUrlImgTypeRowID;
    }

    public void setRelItemStoryThumbnailUrlImgTypeRowID(long relItemStoryThumbnailUrlImgTypeRowID) {
        this.relItemStoryThumbnailUrlImgTypeRowID = relItemStoryThumbnailUrlImgTypeRowID;
    }

    /** To-one relationship, resolved on first access. */
    public UrlImgFileTable getRelItemMobileThumbnailUrlImgType() {
        long __key = this.relItemMobileThumbnailUrlImgTypeRowID;
        if (relItemMobileThumbnailUrlImgType__resolvedKey == null || !relItemMobileThumbnailUrlImgType__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            UrlImgFileTableDao targetDao = daoSession.getUrlImgFileTableDao();
            UrlImgFileTable relItemMobileThumbnailUrlImgTypeNew = targetDao.load(__key);
            synchronized (this) {
                relItemMobileThumbnailUrlImgType = relItemMobileThumbnailUrlImgTypeNew;
            	relItemMobileThumbnailUrlImgType__resolvedKey = __key;
            }
        }
        return relItemMobileThumbnailUrlImgType;
    }

    public void setRelItemMobileThumbnailUrlImgType(UrlImgFileTable relItemMobileThumbnailUrlImgType) {
        if (relItemMobileThumbnailUrlImgType == null) {
            throw new DaoException("To-one property 'relItemMobileThumbnailUrlImgTypeRowID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.relItemMobileThumbnailUrlImgType = relItemMobileThumbnailUrlImgType;
            relItemMobileThumbnailUrlImgTypeRowID = relItemMobileThumbnailUrlImgType.getId();
            relItemMobileThumbnailUrlImgType__resolvedKey = relItemMobileThumbnailUrlImgTypeRowID;
        }
    }

    /** To-one relationship, resolved on first access. */
    public UrlImgFileTable getRelItemStoryThumbnailUrlImgType() {
        long __key = this.relItemStoryThumbnailUrlImgTypeRowID;
        if (relItemStoryThumbnailUrlImgType__resolvedKey == null || !relItemStoryThumbnailUrlImgType__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            UrlImgFileTableDao targetDao = daoSession.getUrlImgFileTableDao();
            UrlImgFileTable relItemStoryThumbnailUrlImgTypeNew = targetDao.load(__key);
            synchronized (this) {
                relItemStoryThumbnailUrlImgType = relItemStoryThumbnailUrlImgTypeNew;
            	relItemStoryThumbnailUrlImgType__resolvedKey = __key;
            }
        }
        return relItemStoryThumbnailUrlImgType;
    }

    public void setRelItemStoryThumbnailUrlImgType(UrlImgFileTable relItemStoryThumbnailUrlImgType) {
        if (relItemStoryThumbnailUrlImgType == null) {
            throw new DaoException("To-one property 'relItemStoryThumbnailUrlImgTypeRowID' has not-null constraint; cannot set to-one to null");
        }
        synchronized (this) {
            this.relItemStoryThumbnailUrlImgType = relItemStoryThumbnailUrlImgType;
            relItemStoryThumbnailUrlImgTypeRowID = relItemStoryThumbnailUrlImgType.getId();
            relItemStoryThumbnailUrlImgType__resolvedKey = relItemStoryThumbnailUrlImgTypeRowID;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
	@Override
	public void accept(EntityVisitorIface entityVisitorIface, T_UrlTypeToId typeID, UrlImgFileTable urlImgFileTable) 
	{
		entityVisitorIface.visit(this,typeID,urlImgFileTable);
	}

	@Override
	public void accept(EntityVisitorIface entityVisitorIface, DaoSession daoSession, ContentItemsTable cntItemsTable) 
	{	
		//dont do anything here.
	}

	@Override
	public void accept(EntityVisitorIface entityVisitorIface, DaoSession daoSession) 
	{
		entityVisitorIface.visit(this, daoSession);
	}
    // KEEP METHODS END

}
